import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from flask import Flask
from threading import Thread
import os

# –¢–æ–∫–µ–Ω –∏ ID –ø—Å–∏—Ö–æ–ª–æ–≥–∞
TOKEN = os.getenv("BOT_TOKEN")  # –ë–µ—Ä–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
PSYCHOLOGIST_ID = int(os.getenv("PSYCHOLOGIST_ID", 974207794))  # ID –ø—Å–∏—Ö–æ–ª–æ–≥–∞

bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_contacts = {}

# –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
keywords = [
    '–±—É–ª–ª–∏–Ω–≥', '–±—É–ª–ª—è—Ç', '—Ä—ç–∫–∏—Ç', '–±—å—é—Ç', '–∏–∑–±–∏–≤–∞—é—Ç', '–ø–∏–Ω–∞—é—Ç', '–º–∞—Ç–µ—Ä—è—Ç',
    '–¥–µ–Ω—å–≥–∏ –ø—Ä–æ—Å—è—Ç', '–Ω–∞–ª–æ–≥', '—É–≥—Ä–æ–∑–∞', '–ø–æ–±–æ–∏', '–æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è', '—É–≥—Ä–æ–∂–∞—é—Ç'
]

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(
        KeyboardButton("üì¢ –°–æ–æ–±—â–∏—Ç—å –æ —Ä—ç–∫–µ—Ç–µ"),
        KeyboardButton("üí¨ –ß–∞—Ç —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º"),
        KeyboardButton("üö® SOS (—ç–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å)"),
        KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True),
        KeyboardButton("‚ùì –ü–æ–º–æ—â—å")
    )
    return markup

# –°—Ç–∞—Ä—Ç
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∑–∞—â–∏—Ç–∏—Ç—å—Å—è –æ—Ç —Ä—ç–∫–µ—Ç–∞. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    if message.contact is not None:
        phone_number = message.contact.phone_number
        user_id = message.chat.id
        user_contacts[user_id] = phone_number
        bot.reply_to(message, f"–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ —Ç–≤–æ–π –Ω–æ–º–µ—Ä: {phone_number}.")
        bot.send_message(PSYCHOLOGIST_ID, f"üìû –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}")

# –ö–Ω–æ–ø–∫–∞ "üì¢ –°–æ–æ–±—â–∏—Ç—å –æ —Ä—ç–∫–µ—Ç–µ"
@bot.message_handler(func=lambda message: message.text == "üì¢ –°–æ–æ–±—â–∏—Ç—å –æ —Ä—ç–∫–µ—Ç–µ")
def report_reket(message):
    user_id = message.chat.id
    phone_number = user_contacts.get(user_id, "–ù–µ —É–∫–∞–∑–∞–Ω")
    bot.reply_to(message, "–û–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –ø–æ–º–æ—á—å.")
    bot.send_message(PSYCHOLOGIST_ID, f"üö® –ñ–∞–ª–æ–±–∞ –Ω–∞ —Ä—ç–∫–µ—Ç –æ—Ç {user_id}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone_number}")

# –ö–Ω–æ–ø–∫–∞ "üí¨ –ß–∞—Ç —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º"
@bot.message_handler(func=lambda message: message.text == "üí¨ –ß–∞—Ç —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º")
def chat_psychologist(message):
    user_id = message.chat.id
    phone_number = user_contacts.get(user_id, "–ù–µ —É–∫–∞–∑–∞–Ω")
    bot.reply_to(message, "–ù–∞—à –ø—Å–∏—Ö–æ–ª–æ–≥ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π.")
    bot.send_message(PSYCHOLOGIST_ID, f"üí¨ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç {user_id}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone_number}")

# –ö–Ω–æ–ø–∫–∞ "üö® SOS (—ç–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å)"
@bot.message_handler(func=lambda message: message.text == "üö® SOS (—ç–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å)")
def sos(message):
    user_id = message.chat.id
    phone_number = user_contacts.get(user_id, "–ù–µ —É–∫–∞–∑–∞–Ω")
    bot.reply_to(message, "‚ö†Ô∏è –¢—Ä–µ–≤–æ–∂–Ω—ã–π —Å–∏–≥–Ω–∞–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    bot.send_message(PSYCHOLOGIST_ID, f"‚ö†Ô∏è SOS –æ—Ç {user_id}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone_number}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —É–≥—Ä–æ–∑–∞–º–∏
@bot.message_handler(func=lambda message: any(keyword in message.text.lower() for keyword in keywords))
def respond_to_abuse(message):
    user_id = message.chat.id
    phone_number = user_contacts.get(user_id, "–ù–µ —É–∫–∞–∑–∞–Ω")
    bot.reply_to(message, "–ú–Ω–µ –∂–∞–ª—å, —á—Ç–æ —Ç—ã —ç—Ç–æ –ø–µ—Ä–µ–∂–∏–≤–∞–µ—à—å. –ú—ã —Ä—è–¥–æ–º!")
    bot.send_message(PSYCHOLOGIST_ID, f"‚ö†Ô∏è –ñ–∞–ª–æ–±–∞ –æ—Ç {user_id}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone_number}\n–¢–µ–∫—Å—Ç: {message.text}")

# –ö–Ω–æ–ø–∫–∞ "‚ùì –ü–æ–º–æ—â—å"
@bot.message_handler(func=lambda message: message.text == "‚ùì –ü–æ–º–æ—â—å")
def help_message(message):
    bot.reply_to(message,
                 "–ï—Å–ª–∏ —Ç—ã —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è —Å –ø—Ä–æ–±–ª–µ–º–æ–π, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π:\n\n"
                 "üì¢ –°–æ–æ–±—â–∏—Ç—å –æ —Ä—ç–∫–µ—Ç–µ\n"
                 "üí¨ –ß–∞—Ç —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º\n"
                 "üö® SOS (—ç–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å)\n"
                 "üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏\n\n"
                 –¢–∞–∫–∂–µ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —á—Ç–æ–±—ã —Å —Ç–æ–±–æ–π –º–æ–≥–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã ")

# –û—Ç–≤–µ—Ç –Ω–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(func=lambda message: True)
def default_response(message):
    bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –≤ –º–µ–Ω—é.")

# Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Railway
app = Flask(__name__)

@app.route('/')
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

def run():
    app.run(host="0.0.0.0", port=8080)

def keep_alive():
    t1 = Thread(target=run)
    t2 = Thread(target=lambda: bot.polling(none_stop=True))
    t1.start()
    t2.start()

keep_alive()



